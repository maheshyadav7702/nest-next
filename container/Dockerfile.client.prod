FROM node:18-alpine AS base
RUN npm install -g npm@10.2.4
FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update
# Set working directory
WORKDIR /app
RUN npm install -g turbo
COPY package*.json ./
COPY turbo.json ./
COPY ./apps/client ./apps/client


# RUN npx turbo prune --scope="client" --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app
# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
# COPY --from=builder /app/out/json/ .
# COPY --from=builder /app/out/package-lock.json ./package-lock.json
RUN npm install turbo
RUN npm install
# Build the project
# COPY --from=builder /app/out/full/ .



# RUN   sed -i "s|process.env.NEXT_PUBLIC_CONTAINER_ENV_VAR|'${NEXT_PUBLIC_SIMPLE_VAR}'|g" /app/apps/core-app-service/next.config.js 
# RUN   sed -i "s|process.env.PUBLIC_NEXTCORE_API_URL|'${PUBLIC_NEXTCORE_API_URL}'|g" /app/apps/core-app-service/next.config.js
# RUN   sed -i "s|process.env.PUBLIC_NEXTEMP_API_URL|'${PUBLIC_NEXTEMP_API_URL}'|g" /app/apps/core-app-service/next.config.js
# RUN   sed -i "s|process.env.PUBLIC_NEXTCASE_API_URL|'${PUBLIC_NEXTCASE_API_URL}'|g" /app/apps/core-app-service/next.config.js
# RUN   sed -i "s|process.env.NEXT_PUBLIC_EMPLOYER_UI_URL|'${NEXT_PUBLIC_EMPLOYER_UI_URL}'|g" /app/apps/core-app-service/next.config.js
# RUN   sed -i "s|process.env.NEXT_PUBLIC_CASEMANAGEMENT_UI_URL|'${NEXT_PUBLIC_CASEMANAGEMENT_UI_URL}'|g" /app/apps/core-app-service/next.config.js
# RUN echo "TEST1 $NEXT_PUBLIC_SIMPLE_VAR"
# RUN echo "TEST2 $NEXT_PUBLIC_CONTAINER_ENV_VAR"

RUN npx turbo run build --filter=client
# RUN npm ci --omit=dev && npm cache clean --force


FROM base AS runner
WORKDIR /app



# Don't run production as root
# COPY --from=installer /app/apps/client/next.config.js ./next.config.js 

# Automatically leverage output traces to reduce image size
COPY --from=installer /app/apps/client/.next ./.next
RUN true
COPY --from=installer /app/apps/client/package.json ./package.json
RUN true
#COPY --from=installer /app/apps/core-app-service/node_modules ./node_modules
RUN npm install

EXPOSE 3000

# ENV PORT 3030

CMD ["npm", "start"]
